{"version":3,"sources":["components/Grid.tsx","components/forms/style.ts","components/forms/Input.tsx","icons/down-chevron.svg","components/forms/Select.tsx","pages/NominationAdding.tsx"],"names":["RowStyle","styled","div","p","gutter","align","css","Row","memo","props","className","React","Children","map","children","child","cloneElement","col","defaultProps","Col","points","totalCol","mediaStr","xs","sm","mediaQuery","md","lg","getWidthMedia","InputWrapper","InputStyle","input","Label","label","Input","SelectStyle","arrow","Select","as","value","disabled","hidden","placeholder","options","option","defaultValue","Actions","ContainerWrapper","Container","ButtonOverride","Button","SCHEME_LIST","NominationAddingPage","useState","submitting","toggleSubmitting","useNomineesContext","addNominee","history","useHistory","handleSubmit","useCallback","event","preventDefault","formData","FormData","target","data","reduce","acc","name","get","setTimeout","push","action","onSubmit","required","type","outline","to","appearance"],"mappings":"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","file":"static/js/5.528ca1ad.chunk.js","sourcesContent":["import React, { memo, FC } from 'react';\nimport styled, { css } from 'styled-components';\nimport { mediaQuery } from '../utils/helpers';\n\nconst RowStyle = styled.div<{ align?: 'center'; gutter?: number }>`\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: -${(p) => p.gutter}rem;\n  margin-right: -${(p) => p.gutter}rem;\n\n  ${(p) =>\n    p.align &&\n    css`\n      align-items: center;\n    `}\n`;\n\ninterface RowProps {\n  gutter?: number;\n  col?: number;\n  children: React.ReactNode;\n  align?: 'center';\n  className?: string;\n}\n\nexport const Row: FC<RowProps> = memo((props) => {\n  return (\n    <RowStyle\n      align={props.align}\n      className={props.className}\n      gutter={props.gutter}\n    >\n      {React.Children.map(props.children, (child) =>\n        React.cloneElement(child as any, {\n          gutter: props.gutter,\n          col: props.col,\n        })\n      )}\n    </RowStyle>\n  );\n});\n\nRow.defaultProps = {\n  gutter: 1,\n  col: 12,\n};\n\nfunction getWidthMedia(points: Record<BerakPoints, number>, totalCol: number) {\n  let mediaStr = `\n    flex: 0 0 100%;\n    max-width: 100%;\n  `;\n\n  if (points.xs) {\n    mediaStr += `\n      flex: 0 0 ${(points.xs / totalCol) * 100}%;\n      max-width: ${(points.xs / totalCol) * 100}%;\n    `;\n  }\n\n  if (points.sm) {\n    mediaStr += `\n      ${mediaQuery('sm')} {\n        flex: 0 0 ${(points.sm / totalCol) * 100}%;\n        max-width: ${(points.sm / totalCol) * 100}%;\n      }\n    `;\n  }\n\n  if (points.md) {\n    mediaStr += `\n      ${mediaQuery('md')} {\n        flex: 0 0 ${(points.md / totalCol) * 100}%;\n        max-width: ${(points.md / totalCol) * 100}%;\n      }\n    `;\n  }\n\n  if (points.lg) {\n    mediaStr += `\n      ${mediaQuery('lg')} {\n        flex: 0 0 ${(points.lg / totalCol) * 100}%;\n        max-width: ${(points.lg / totalCol) * 100}%;\n      }\n    `;\n  }\n\n  return css`\n    ${mediaStr}\n  `;\n}\n\nexport const Col = styled.div<\n  {\n    gutter?: number;\n    col?: number;\n  } & Partial<Record<BerakPoints, number>>\n>`\n  padding: 0 ${(p) => `${p.gutter}rem`};\n  display: block;\n  ${(p) =>\n    getWidthMedia(\n      {\n        xs: p.xs,\n        sm: p.sm,\n        md: p.md,\n        lg: p.lg,\n      },\n      p.col\n    )}\n`;\n","import styled from 'styled-components';\n\nexport const InputWrapper = styled.div`\n  margin-bottom: 1.5rem;\n`;\n\nexport const InputStyle = styled.input`\n  border: 1px solid #d9d9d9;\n  border-radius: 4px;\n  padding: 4px 11px;\n  line-height: 1.5715;\n  width: 100%;\n\n  &[type='number']::-webkit-outer-spin-button,\n  &[type='number']::-webkit-inner-spin-button {\n    appearance: none;\n    margin: 0;\n  }\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 0.5rem;\n  display: block;\n`;\n","import { memo } from 'react';\nimport { InputStyle, InputWrapper, Label } from './style';\n\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  label?: string;\n}\n\nexport const Input = memo<InputProps>(({ label, ...props }) => {\n  return (\n    <InputWrapper>\n      {label && <Label>{label}</Label>}\n      <InputStyle {...props} />\n    </InputWrapper>\n  );\n});\n","export default __webpack_public_path__ + \"static/media/down-chevron.5c07ce46.svg\";","import { memo, FC } from 'react';\nimport styled from 'styled-components';\nimport { InputStyle, InputWrapper, Label } from './style';\nimport arrow from '../../icons/down-chevron.svg';\n\nconst SelectStyle = styled(InputStyle)`\n  background-image: url(${arrow});\n  background-repeat: no-repeat;\n  background-position: right 11px top 50%;\n  background-size: auto 10px;\n  appearance: none;\n`;\n\ninterface SelectProps extends React.InputHTMLAttributes<HTMLSelectElement> {\n  label?: string;\n  options?: { value: string; label: string }[];\n}\n\nexport const Select: FC<SelectProps> = memo(({ label, ...props }) => {\n  return (\n    <InputWrapper>\n      {label && <Label>{label}</Label>}\n      <SelectStyle as=\"select\" {...props}>\n        <option value=\"\" disabled hidden>\n          {props.placeholder}\n        </option>\n        {props.options?.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </SelectStyle>\n    </InputWrapper>\n  );\n});\n\nSelect.defaultProps = {\n  defaultValue: '',\n};\n","import React, { memo, useCallback, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Button, LinkButton } from '../components/Button';\nimport { Container } from '../components/Container';\nimport { Input } from '../components/forms/Input';\nimport { Select } from '../components/forms/Select';\nimport { Col, Row } from '../components/Grid';\nimport { useNomineesContext } from '../components/NomineeContext';\nimport { mediaQuery } from '../utils/helpers';\n\nconst Actions = styled.div`\n  text-align: right;\n`;\n\nconst ContainerWrapper = styled(Container)`\n  margin-bottom: 2rem;\n\n  ${mediaQuery('md')} {\n    max-width: 32rem;\n  }\n`;\n\nconst ButtonOverride = styled(Button)`\n  margin-left: 0.5rem;\n`;\n\nconst SCHEME_LIST = [\n  { value: 'Special Needs Scheme', label: 'Special Needs Scheme' },\n  { value: 'Cash', label: 'Cash' },\n  { value: 'Enhanced Nomination Scheme', label: 'Enhanced Nomination Scheme' },\n];\n\nexport const NominationAddingPage = memo((props) => {\n  const [submitting, toggleSubmitting] = useState(false);\n  const [, addNominee] = useNomineesContext();\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    (event: React.ChangeEvent<HTMLFormElement>) => {\n      event.preventDefault();\n\n      const formData = new FormData(event.target);\n      const data: Nominee = ['name', 'nric', 'scheme', 'percentage'].reduce(\n        (acc, name) => ({\n          ...acc,\n          [name]: formData.get(name),\n        }),\n        {} as any\n      );\n      toggleSubmitting(true);\n      setTimeout(() => {\n        addNominee(data);\n        toggleSubmitting(false);\n        history.push('/nomination');\n      }, 2000);\n    },\n    [addNominee, history]\n  );\n\n  return (\n    <ContainerWrapper>\n      <h1>Add Nomination</h1>\n      <Row>\n        <Col sm={12}>\n          <form action=\"\" onSubmit={handleSubmit}>\n            <Input\n              disabled={submitting}\n              name=\"name\"\n              label=\"Name\"\n              placeholder=\"e.g. John Doe\"\n              required\n            />\n            <Input\n              disabled={submitting}\n              name=\"nric\"\n              label=\"NRIC\"\n              placeholder=\"e.g. S1234567A\"\n              required\n            />\n            <Select\n              disabled={submitting}\n              name=\"scheme\"\n              label=\"Scheme\"\n              placeholder=\"Select scheme\"\n              options={SCHEME_LIST}\n              required\n            />\n            <Input\n              disabled={submitting}\n              name=\"percentage\"\n              label=\"Percentage\"\n              placeholder=\"e.g. 10\"\n              type=\"number\"\n              required\n            />\n            <Actions>\n              <LinkButton outline to=\"/nomination\" appearance=\"default\">\n                Cancel\n              </LinkButton>\n              <ButtonOverride\n                disabled={submitting}\n                appearance=\"primary\"\n                type=\"submit\"\n              >\n                {submitting ? 'Submitting...' : 'Submit'}\n              </ButtonOverride>\n            </Actions>\n          </form>\n        </Col>\n      </Row>\n    </ContainerWrapper>\n  );\n});\n\nexport default NominationAddingPage;\n"],"sourceRoot":""}